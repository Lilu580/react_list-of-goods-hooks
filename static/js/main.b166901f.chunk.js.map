{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSort","isReversed","setReverse","setSortType","type","goodsToShow","goods","visibleGoods","sort","prevGood","currGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","addResetButton","className","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAMMC,EAAc,SAACC,GACnBJ,EAAQI,IAQJC,EA3CD,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUE,EACZ,EADYA,WAENM,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQX,GACN,KAAKL,EAASiB,SACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKhB,EAASmB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EAqBHS,CAAkBrB,EAAiB,CAAEI,WAAUE,eAC7CgB,EAAiBlB,IAAaL,EAASI,MAAQG,EAErD,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEd,KAAK,SACLc,UAAWC,IACT,iBACA,CACE,WAAYpB,IAAaL,EAASiB,WAGtCS,QAAS,kBAAMjB,EAAYT,EAASiB,WARtC,iCAaA,wBACEP,KAAK,SACLc,UAAWC,IACT,oBACA,CACE,WAAYpB,IAAaL,EAASmB,SAGtCO,QAAS,kBAAMjB,EAAYT,EAASmB,SARtC,4BAaA,wBACET,KAAK,SACLc,UAAWC,IACT,oBACA,CACE,YAAalB,IAGjBmB,QAtDQ,WACdlB,GAAW,SAAAmB,GAAO,OAAKA,MA6CnB,qBAaCJ,GACC,wBACEb,KAAK,SACLc,UAAU,4BACVE,QAvDI,WACZlB,GAAW,GACXF,EAAQN,EAASI,OAkDX,sBAUJ,6BACGO,EAAYiB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YChIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b166901f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prevGood, currGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prevGood.localeCompare(currGood);\n\n      case SortType.LENGTH:\n        return prevGood.length - currGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSort] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const reverse = () => {\n    setReverse(current => !current);\n  };\n\n  const setSortType = (type: SortType) => {\n    setSort(type);\n  };\n\n  const reset = () => {\n    setReverse(false);\n    setSort(SortType.NONE);\n  };\n\n  const goodsToShow\n    = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n  const addResetButton = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {addResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsToShow.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}